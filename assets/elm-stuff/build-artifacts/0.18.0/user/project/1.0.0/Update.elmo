var _user$project$Update$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'OnLoadUser':
				var _p1 = _p0._0;
				if (_p1.ctor === 'Ok') {
					var _p2 = _p1._0;
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								user: _elm_lang$core$Maybe$Just(_p2)
							}),
						_1: _user$project$Flags$storeUser(
							_elm_lang$core$Maybe$Just(_p2))
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								errorMessage: _elm_lang$core$Basics$toString(_p1._0)
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'OnLocationChange':
				var newRoute = _user$project$Routing$parseLocation(_p0._0);
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{route: newRoute}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'OnLoadCategories':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(
						_elm_lang$core$Debug$log,
						A2(
							_elm_lang$core$Basics_ops['++'],
							'Got result: ',
							_elm_lang$core$Basics$toString(_p0._0)),
						_elm_lang$core$Platform_Cmd$none)
				};
			case 'Mdl':
				return A3(_debois$elm_mdl$Material$update, _user$project$Msgs$Mdl, _p0._0, model);
			case 'SetUser':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							loginForm: A3(_user$project$Page_LoginFormHelpers$updateWith, _user$project$Page_LoginFormHelpers$Username, _p0._0, model.loginForm)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'SetPass':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							loginForm: A3(_user$project$Page_LoginFormHelpers$updateWith, _user$project$Page_LoginFormHelpers$Password, _p0._0, model.loginForm)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'SubmitCredentials':
				return _user$project$Page_LoginFormHelpers$login(model);
			case 'LoginResult':
				return A2(_user$project$Page_LoginFormHelpers$handleLoginResult, model, _p0._0);
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{jwt: _elm_lang$core$Maybe$Nothing, user: _elm_lang$core$Maybe$Nothing}),
					_1: _user$project$Flags$logout(_elm_lang$core$Maybe$Nothing)
				};
		}
	});
